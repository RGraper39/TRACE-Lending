import React, { useEffect, useState, useRef } from "react";
import AOS from "aos";
import "aos/dist/aos.css";

// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ ---
function ScrollReveal({ offset = 100, delay = 0, children }) {
  const ref = useRef();
  const [visible, setVisible] = useState(false);

  useEffect(() => {
    function onScroll() {
      if (!ref.current) return;
      const rect = ref.current.getBoundingClientRect();
      if (rect.top < window.innerHeight - offset && rect.bottom > 0) {
        setVisible(true);
      } else {
        setVisible(false);
      }
    }
    window.addEventListener("scroll", onScroll);
    onScroll();
    return () => window.removeEventListener("scroll", onScroll);
  }, [offset]);

  return (
    <div
      ref={ref}
      style={{
        transform: visible ? "translateY(0)" : "translateY(60px)",
        opacity: visible ? 1 : 0,
        transition: "all 0.7s",
        transitionDelay: `${delay}s`
      }}
    >
      {children}
    </div>
  );
}

// --- Popup helpers ---
function useOncePerSession(key, triggerFn) {
  useEffect(() => {
    if (!sessionStorage.getItem(key)) {
      triggerFn();
      sessionStorage.setItem(key, "shown");
    }
  }, [key, triggerFn]);
}

// --- –ü–µ—Ä–µ–≤–æ–¥—ã ---
const translations = {
  en: {
    popupWelcomeTitle: "Where do you want to leave your TRACE?",
    popupWelcomeDesc: "Find your power place. Start your journey with inspiration.",
    popupWelcomeBtn: "Start exploring",
    popupExitTitle: "Want secret places locals love?",
    popupExitDesc: "We‚Äôll send 5 hidden gems by email",
    popupExitBtn: "Send me the list",
    popupExitSent: "Sent! Check your inbox.",
    popupStickyTitle: "TRACE is coming soon",
    popupStickyBtn: "Get early access",
    popupStickyThanks: "Thank you!",
    popupMapBtn: "Add to my route",
    popupEmailPlaceholder: "Your email",
    popupEmailPlaceholderShort: "Email",
    heroTitle: "Leave your TRACE.\nDiscover your path.",
    heroDesc: "TRACE is more than just routes.\nIt's your voice companion, personalized feed, local tips, and language practice ‚Äî all in your pocket.",
    tryDemo: "Try the Demo",
    getEarlyAccess: "Get Early Access",
    soundsFamiliar: "Sounds familiar?",
    soundsFamiliarDesc: "Here are the main challenges modern travelers face ‚Äî do any of these sound like you?",
    notSure: "Not sure where to go or why",
    notSureDesc: "Too many options and recommendations ‚Äî it's hard to know what truly fits you.",
    planningRoutes: "Planning routes is exhausting",
    planningRoutesDesc: "Hours of Googling and piecing together routes can be draining and not enjoyable.",
    noOneToTalk: "No one to talk to on the spot",
    noOneToTalkDesc: "Language barriers make it hard to enjoy the culture and connect, especially when traveling solo.",
    safety: "Worried about safety",
    safetyDesc: "You want to feel safe ‚Äî especially in a new city or unfamiliar environment.",
    whatIsTrace: "What is TRACE?",
    whatIsTraceDesc: "TRACE is more than just a map or a guide. It's your smart voice companion that adapts to your rhythm, interests, and language.",
    voiceAI: "üéôÔ∏è Voice AI Companion",
    voiceAIDesc: "Talk to TRACE like a friend ‚Äî it will guide, translate, support, and share stories.",
    personalizedRoutes: "üó∫Ô∏è Personalized Routes",
    personalizedRoutesDesc: "Routes tailored to your pace, mood, and interests. No tourist clich√©s.",
    localRecs: "üß† Local Recommendations",
    localRecsDesc: "Genuine tips from locals. Learn how to feel the city, not just see it.",
    tryTrace: "Try TRACE",
    howWorks: "How does it work?",
    howWorksDesc: "TRACE turns your trip into a curated story ‚Äî guided by voice, tailored to your rhythm.",
    pickDest: "Pick your destination",
    pickDestDesc: "Tell TRACE where you're going ‚Äî it immediately tunes into the local vibe.",
    setVoice: "Set your voice guide",
    setVoiceDesc: "Choose your mood, travel style and language level ‚Äî TRACE adapts everything for you.",
    getTips: "Get local tips",
    getTipsDesc: "Discover hidden gems, stories, caf√©s and corners locals actually love.",
    goLive: "Go live your story",
    goLiveDesc: "TRACE stays with you ‚Äî guiding, suggesting, translating, supporting along the way.",
    tryTraceFree: "Try TRACE for free",
    useCases: "Use Cases",
    useCasesDesc: "Whether you're chasing history, silence or serendipity ‚Äî TRACE adapts to your style.",
    soloTrip: "‚ú® Solo Creator Trip",
    soloTripDesc: "You land in Lisbon with no plan. TRACE curates poetic routes, audio stories, and safe local caf√©s ‚Äî and you just walk, record, feel.",
    startExploring: "Start exploring",
    slowTravel: "üåø Slow Travel Escape",
    slowTravelDesc: "A couple chooses a week in Tuscany. TRACE slows down the pace, offers sensory walks, language tips and mindful moments along vineyards.",
    tryItNow: "Try it now",
    languageJourney: "üó£Ô∏è Language Practice Journey",
    languageJourneyDesc: "You're learning Spanish in Mexico City. TRACE gives you real-time voice practice, local slang, and guided micro-chats at markets & caf√©s.",
    speakTravel: "Speak & travel",
    whyTrace: "Why TRACE?",
    whyTraceDesc: "TRACE isn't just another travel app ‚Äî it's your mindful, personalized journey companion.",
    aiKnows: "AI That Knows You",
    aiKnowsDesc: "TRACE adapts to your pace, moods, interests, and languages ‚Äî the more you travel, the smarter it becomes.",
    notJustMaps: "Not Just Maps, but Meaning",
    notJustMapsDesc: "TRACE offers poetic routes, local stories, and emotional textures of a place ‚Äî beyond the tourist checklist.",
    liveLang: "Live Language Practice",
    liveLangDesc: "Interact with the world around you in real time. TRACE guides you through micro-conversations with locals.",
    curated: "Curated by Locals & Artists",
    curatedDesc: "Every suggestion is based on the soul of the place ‚Äî created with love by people who live and breathe it.",
    testimonials: "What travelers say about TRACE",
    testimonialsList: [
      {
        text: "I felt like I had a local poet in my pocket. TRACE showed me stories I would have never discovered on my own.",
        name: "Lina, Digital Nomad",
        route: "Berlin ‚Üí Tbilisi",
        img: "https://randomuser.me/api/portraits/women/65.jpg"
      },
      {
        text: "TRACE helped me practice Italian with real people. The AI felt like a kind travel buddy, not just a chatbot.",
        name: "Mateo, Language Learner",
        route: "Barcelona ‚Üí Rome",
        img: "https://randomuser.me/api/portraits/men/32.jpg"
      },
      {
        text: "I was burned out by travel planning. TRACE brought back the wonder ‚Äî it‚Äôs like Slow Travel with superpowers.",
        name: "Jules, Creative Explorer",
        route: "Lisbon ‚Üí Kyoto",
        img: "https://randomuser.me/api/portraits/women/45.jpg"
      }
    ],
    ready: "Ready to travel your way?",
    readyDesc: "Discover meaningful journeys with TRACE ‚Äî your smart, personal travel companion.",
    getEarly: "Get early access",
    copyright: "Conscious travel. Personal paths.",
  },
  ru: {
    popupWelcomeTitle: "–ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –°–õ–ï–î?",
    popupWelcomeDesc: "–ù–∞–π–¥–∏—Ç–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ —Å–∏–ª—ã. –ù–∞—á–Ω–∏—Ç–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è.",
    popupWelcomeBtn: "–ù–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
    popupExitTitle: "–•–æ—Ç–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç –º–µ—Å—Ç–Ω—ã–µ?",
    popupExitDesc: "–ú—ã –ø—Ä–∏—à–ª—ë–º 5 —Å–∫—Ä—ã—Ç—ã—Ö –∂–µ–º—á—É–∂–∏–Ω –Ω–∞ –ø–æ—á—Ç—É",
    popupExitBtn: "–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫",
    popupExitSent: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É.",
    popupStickyTitle: "TRACE —Å–∫–æ—Ä–æ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è",
    popupStickyBtn: "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø",
    popupStickyThanks: "–°–ø–∞—Å–∏–±–æ!",
    popupMapBtn: "–î–æ–±–∞–≤–∏—Ç—å –≤ –º–æ–π –º–∞—Ä—à—Ä—É—Ç",
    popupEmailPlaceholder: "–í–∞—à email",
    popupEmailPlaceholderShort: "Email",
    heroTitle: "–û—Å—Ç–∞–≤—å —Å–≤–æ–π –°–õ–ï–î.\n–û—Ç–∫—Ä–æ–π —Å–≤–æ–π –ø—É—Ç—å.",
    heroDesc: "TRACE ‚Äî —ç—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º –º–∞—Ä—à—Ä—É—Ç—ã.\n–≠—Ç–æ –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–ø—É—Ç–Ω–∏–∫, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ª–µ–Ω—Ç–∞, —Å–æ–≤–µ—Ç—ã –º–µ—Å—Ç–Ω—ã—Ö –∏ —è–∑—ã–∫–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –≤—Å—ë –≤ –≤–∞—à–µ–º –∫–∞—Ä–º–∞–Ω–µ.",
    tryDemo: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –¥–µ–º–æ",
    getEarlyAccess: "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø",
    soundsFamiliar: "–ó–Ω–∞–∫–æ–º–æ?",
    soundsFamiliarDesc: "–í–æ—Ç –≥–ª–∞–≤–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ ‚Äî —á—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–æ–≥–æ –ø—Ä–æ –≤–∞—Å?",
    notSure: "–ù–µ –∑–Ω–∞–µ—Ç–µ, –∫—É–¥–∞ –∏ –∑–∞—á–µ–º",
    notSureDesc: "–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏ —Å–æ–≤–µ—Ç–æ–≤ ‚Äî —Å–ª–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.",
    planningRoutes: "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤ —É—Ç–æ–º–ª—è–µ—Ç",
    planningRoutesDesc: "–ß–∞—Å—ã –≤ –ø–æ–∏—Å–∫–µ –∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ‚Äî —ç—Ç–æ —É—Ç–æ–º–∏—Ç–µ–ª—å–Ω–æ –∏ –Ω–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Ä–∞–¥–æ—Å—Ç–∏.",
    noOneToTalk: "–ù–µ–∫–æ–º—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–∞ –º–µ—Å—Ç–µ",
    noOneToTalkDesc: "–Ø–∑—ã–∫–æ–≤–æ–π –±–∞—Ä—å–µ—Ä –º–µ—à–∞–µ—Ç –ø—Ä–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –∫—É–ª—å—Ç—É—Ä—É –∏ –æ–±—â–∞—Ç—å—Å—è, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—Ç–µ –≤ –æ–¥–∏–Ω–æ—á–∫—É.",
    safety: "–í–æ–ø—Ä–æ—Å—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
    safetyDesc: "–í—ã —Ö–æ—Ç–∏—Ç–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ ‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –Ω–æ–≤–æ–º –≥–æ—Ä–æ–¥–µ –∏–ª–∏ –Ω–µ–∑–Ω–∞–∫–æ–º–æ–π —Å—Ä–µ–¥–µ.",
    whatIsTrace: "–ß—Ç–æ —Ç–∞–∫–æ–µ TRACE?",
    whatIsTraceDesc: "TRACE ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∞ –∏–ª–∏ –≥–∏–¥. –≠—Ç–æ –≤–∞—à —É–º–Ω—ã–π –≥–æ–ª–æ—Å–æ–≤–æ–π —Å–ø—É—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à —Ä–∏—Ç–º, –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —è–∑—ã–∫.",
    voiceAI: "üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–π AI-—Å–ø—É—Ç–Ω–∏–∫",
    voiceAIDesc: "–û–±—â–∞–π—Ç–µ—Å—å —Å TRACE –∫–∞–∫ —Å –¥—Ä—É–≥–æ–º ‚Äî –æ–Ω –ø–æ–¥—Å–∫–∞–∂–µ—Ç, –ø–µ—Ä–µ–≤–µ–¥—ë—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏—Ç –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏.",
    personalizedRoutes: "üó∫Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã",
    personalizedRoutesDesc: "–ú–∞—Ä—à—Ä—É—Ç—ã –ø–æ–¥ –≤–∞—à —Ç–µ–º–ø, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã. –ù–∏–∫–∞–∫–∏—Ö —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∫–ª–∏—à–µ.",
    localRecs: "üß† –°–æ–≤–µ—Ç—ã –æ—Ç –º–µ—Å—Ç–Ω—ã—Ö",
    localRecsDesc: "–ù–∞—Å—Ç–æ—è—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∂–∏—Ç–µ–ª–µ–π. –£—á–∏—Ç–µ—Å—å —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≥–æ—Ä–æ–¥, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –Ω–µ–≥–æ.",
    tryTrace: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å TRACE",
    howWorks: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?",
    howWorksDesc: "TRACE –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤–∞—à—É –ø–æ–µ–∑–¥–∫—É –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é ‚Äî –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ, –ø–æ–¥—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø–æ–¥ –≤–∞—à —Ä–∏—Ç–º.",
    pickDest: "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ",
    pickDestDesc: "–°–∫–∞–∂–∏—Ç–µ TRACE, –∫—É–¥–∞ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å ‚Äî –æ–Ω —Å—Ä–∞–∑—É –ø–æ—á—É–≤—Å—Ç–≤—É–µ—Ç –º–µ—Å—Ç–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.",
    setVoice: "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≥–∏–¥–∞",
    setVoiceDesc: "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, —Å—Ç–∏–ª—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —É—Ä–æ–≤–µ–Ω—å —è–∑—ã–∫–∞ ‚Äî TRACE –≤—Å—ë –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç –ø–æ–¥ –≤–∞—Å.",
    getTips: "–ü–æ–ª—É—á–∞–π—Ç–µ —Å–æ–≤–µ—Ç—ã",
    getTipsDesc: "–û—Ç–∫—Ä—ã–≤–∞–π—Ç–µ —Å–∫—Ä—ã—Ç—ã–µ –∂–µ–º—á—É–∂–∏–Ω—ã, –∏—Å—Ç–æ—Ä–∏–∏, –∫–∞—Ñ–µ –∏ —É–≥–æ–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ª—é–±—è—Ç –º–µ—Å—Ç–Ω—ã–µ.",
    goLive: "–ñ–∏–≤–∏—Ç–µ —Å–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–µ–π",
    goLiveDesc: "TRACE –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º ‚Äî –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç, –ø–µ—Ä–µ–≤–æ–¥–∏—Ç, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–µ.",
    tryTraceFree: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å TRACE –±–µ—Å–ø–ª–∞—Ç–Ω–æ",
    useCases: "–°—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
    useCasesDesc: "–ò—â–µ—Ç–µ –ª–∏ –≤—ã –∏—Å—Ç–æ—Ä–∏—é, —Ç–∏—à–∏–Ω—É –∏–ª–∏ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏ ‚Äî TRACE –ø–æ–¥—Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ–¥ –≤–∞—à —Å—Ç–∏–ª—å.",
    soloTrip: "‚ú® –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ —Å–æ–ª–æ-–∫—Ä–µ–∞—Ç–æ—Ä–∞",
    soloTripDesc: "–í—ã –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç–µ –≤ –õ–∏—Å—Å–∞–±–æ–Ω –±–µ–∑ –ø–ª–∞–Ω–∞. TRACE –ø–æ–¥–±–∏—Ä–∞–µ—Ç –ø–æ—ç—Ç–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –∞—É–¥–∏–æ–∏—Å—Ç–æ—Ä–∏–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–∞—Ñ–µ ‚Äî –≤—ã –ø—Ä–æ—Å—Ç–æ –≥—É–ª—è–µ—Ç–µ, –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç–µ, —á—É–≤—Å—Ç–≤—É–µ—Ç–µ.",
    startExploring: "–ù–∞—á–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ",
    slowTravel: "üåø –ú–µ–¥–ª–µ–Ω–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ",
    slowTravelDesc: "–ü–∞—Ä–∞ –≤—ã–±–∏—Ä–∞–µ—Ç –Ω–µ–¥–µ–ª—é –≤ –¢–æ—Å–∫–∞–Ω–µ. TRACE –∑–∞–º–µ–¥–ª—è–µ—Ç —Ç–µ–º–ø, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —á—É–≤—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏, —è–∑—ã–∫–æ–≤—ã–µ —Å–æ–≤–µ—Ç—ã –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã —Å—Ä–µ–¥–∏ –≤–∏–Ω–æ–≥—Ä–∞–¥–Ω–∏–∫–æ–≤.",
    tryItNow: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å",
    languageJourney: "üó£Ô∏è –Ø–∑—ã–∫–æ–≤–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ",
    languageJourneyDesc: "–í—ã —É—á–∏—Ç–µ –∏—Å–ø–∞–Ω—Å–∫–∏–π –≤ –ú–µ—Ö–∏–∫–æ. TRACE –¥–∞—ë—Ç –ø—Ä–∞–∫—Ç–∏–∫—É –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏, –º–µ—Å—Ç–Ω—ã–π —Å–ª–µ–Ω–≥ –∏ –º–∏–Ω–∏-–¥–∏–∞–ª–æ–≥–∏ –Ω–∞ —Ä—ã–Ω–∫–∞—Ö –∏ –≤ –∫–∞—Ñ–µ.",
    speakTravel: "–ì–æ–≤–æ—Ä–∏—Ç—å –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å",
    whyTrace: "–ü–æ—á–µ–º—É TRACE?",
    whyTraceDesc: "TRACE ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—á–µ—Ä–µ–¥–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π, –∞ –≤–∞—à –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫.",
    aiKnows: "AI, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –≤–∞—Å",
    aiKnowsDesc: "TRACE –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –≤–∞—à —Ç–µ–º–ø, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ, –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —è–∑—ã–∫ ‚Äî —á–µ–º –±–æ–ª—å—à–µ –≤—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—Ç–µ, —Ç–µ–º —É–º–Ω–µ–µ –æ–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è.",
    notJustMaps: "–ù–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç—ã, –∞ —Å–º—ã—Å–ª—ã",
    notJustMapsDesc: "TRACE –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ—ç—Ç–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã, –º–µ—Å—Ç–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —ç–º–æ—Ü–∏–∏ ‚Äî –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —á–µ–∫-–ª–∏—Å—Ç–æ–≤.",
    liveLang: "–ü—Ä–∞–∫—Ç–∏–∫–∞ —è–∑—ã–∫–∞ –≤–∂–∏–≤—É—é",
    liveLangDesc: "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –º–∏—Ä–æ–º –≤–æ–∫—Ä—É–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏. TRACE –≤–µ–¥—ë—Ç –≤–∞—Å —á–µ—Ä–µ–∑ –º–∏–Ω–∏-—Ä–∞–∑–≥–æ–≤–æ—Ä—ã —Å –º–µ—Å—Ç–Ω—ã–º–∏.",
    curated: "–°–æ–∑–¥–∞–Ω–æ –º–µ—Å—Ç–Ω—ã–º–∏ –∏ —Ö—É–¥–æ–∂–Ω–∏–∫–∞–º–∏",
    curatedDesc: "–ö–∞–∂–¥–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ‚Äî —ç—Ç–æ –¥—É—à–∞ –º–µ—Å—Ç–∞, —Å–æ–∑–¥–∞–Ω–Ω–∞—è —Å –ª—é–±–æ–≤—å—é —Ç–µ–º–∏, –∫—Ç–æ –∑–¥–µ—Å—å –∂–∏–≤—ë—Ç.",
    testimonials: "–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –æ TRACE",
    testimonialsList: [
      {
        text: "–Ø –±—É–¥—Ç–æ –Ω–æ—Å–∏–ª–∞ –≤ –∫–∞—Ä–º–∞–Ω–µ –º–µ—Å—Ç–Ω–æ–≥–æ –ø–æ—ç—Ç–∞. TRACE –ø–æ–∫–∞–∑–∞–ª –º–Ω–µ –∏—Å—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ —è –±—ã –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–∫—Ä—ã–ª–∞ —Å–∞–º–∞.",
        name: "–õ–∏–Ω–∞, —Ü–∏—Ñ—Ä–æ–≤–æ–π –∫–æ—á–µ–≤–Ω–∏–∫",
        route: "–ë–µ—Ä–ª–∏–Ω ‚Üí –¢–±–∏–ª–∏—Å–∏",
        img: "https://randomuser.me/api/portraits/women/65.jpg"
      },
      {
        text: "TRACE –ø–æ–º–æ–≥ –º–Ω–µ –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ª—é–¥—å–º–∏. AI –æ—â—É—â–∞–ª—Å—è –∫–∞–∫ –¥–æ–±—Ä—ã–π –ø–æ–ø—É—Ç—á–∏–∫, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —á–∞—Ç-–±–æ—Ç.",
        name: "–ú–∞—Ç–µ–æ, –∏–∑—É—á–∞—é—â–∏–π —è–∑—ã–∫–∏",
        route: "–ë–∞—Ä—Å–µ–ª–æ–Ω–∞ ‚Üí –†–∏–º",
        img: "https://randomuser.me/api/portraits/men/32.jpg"
      },
      {
        text: "–Ø —É—Å—Ç–∞–ª–∞ –æ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–µ–∑–¥–æ–∫. TRACE –≤–µ—Ä–Ω—É–ª –º–Ω–µ –æ—â—É—â–µ–Ω–∏–µ —á—É–¥–∞ ‚Äî —ç—Ç–æ –∫–∞–∫ Slow Travel —Å —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏.",
        name: "–ñ—é–ª—å, —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
        route: "–õ–∏—Å—Å–∞–±–æ–Ω ‚Üí –ö–∏–æ—Ç–æ",
        img: "https://randomuser.me/api/portraits/women/45.jpg"
      }
    ],
    ready: "–ì–æ—Ç–æ–≤—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ-—Å–≤–æ–µ–º—É?",
    readyDesc: "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å TRACE ‚Äî –≤–∞—à–∏–º —É–º–Ω—ã–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Å–ø—É—Ç–Ω–∏–∫–æ–º.",
    getEarly: "–ü–æ–ª—É—á–∏—Ç—å —Ä–∞–Ω–Ω–∏–π –¥–æ—Å—Ç—É–ø",
    copyright: "–û—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è. –õ–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã.",
  }
};

export default function App() {
  const [lang, setLang] = useState("en");
  const t = translations[lang];

  // --- POPUP STATE ---
  const [showWelcome, setShowWelcome] = useState(false);
  const [showExit, setShowExit] = useState(false);
  const [showSticky, setShowSticky] = useState(false);
  const [showMapModal, setShowMapModal] = useState(false);
  const [mapModalData, setMapModalData] = useState(null);

  useOncePerSession("trace_welcome_popup", () => {
    setTimeout(() => setShowWelcome(true), 12000);
  });

  useEffect(() => {
    function onMouseLeave(e) {
      if (e.clientY < 40 && window.innerWidth > 768 && !sessionStorage.getItem("trace_exit_popup")) {
        setShowExit(true);
        sessionStorage.setItem("trace_exit_popup", "shown");
      }
    }
    window.addEventListener("mouseout", onMouseLeave);
    return () => window.removeEventListener("mouseout", onMouseLeave);
  }, []);

  useEffect(() => {
    function onScroll() {
      if (showSticky) return;
      const scrollY = window.scrollY || window.pageYOffset;
      const docHeight = document.documentElement.scrollHeight - window.innerHeight;
      if (docHeight > 0 && scrollY / docHeight > 0.75 && !sessionStorage.getItem("trace_sticky_popup")) {
        setShowSticky(true);
        sessionStorage.setItem("trace_sticky_popup", "shown");
      }
    }
    window.addEventListener("scroll", onScroll);
    return () => window.removeEventListener("scroll", onScroll);
  }, [showSticky]);

  function handleMapClick(place) {
    setMapModalData(place);
    setShowMapModal(true);
  }

  const problems = [
    { title: t.notSure, desc: t.notSureDesc },
    { title: t.planningRoutes, desc: t.planningRoutesDesc },
    { title: t.noOneToTalk, desc: t.noOneToTalkDesc },
    { title: t.safety, desc: t.safetyDesc }
  ];
  const features = [
    { icon: "üß†", title: t.aiKnows, desc: t.aiKnowsDesc },
    { icon: "üó∫Ô∏è", title: t.notJustMaps, desc: t.notJustMapsDesc },
    { icon: "üó£Ô∏è", title: t.liveLang, desc: t.liveLangDesc },
    { icon: "üß≠", title: t.curated, desc: t.curatedDesc }
  ];
  const whatIsTrace = [
    { title: t.voiceAI, desc: t.voiceAIDesc },
    { title: t.personalizedRoutes, desc: t.personalizedRoutesDesc },
    { title: t.localRecs, desc: t.localRecsDesc }
  ];
  const howWorks = [
    { icon: "üß≠", title: t.pickDest, desc: t.pickDestDesc },
    { icon: "üéôÔ∏è", title: t.setVoice, desc: t.setVoiceDesc },
    { icon: "üîé", title: t.getTips, desc: t.getTipsDesc },
    { icon: "üö∂", title: t.goLive, desc: t.goLiveDesc }
  ];
  const useCases = [
    { title: t.soloTrip, desc: t.soloTripDesc, btn: t.startExploring },
    { title: t.slowTravel, desc: t.slowTravelDesc, btn: t.tryItNow },
    { title: t.languageJourney, desc: t.languageJourneyDesc, btn: t.speakTravel }
  ];
  const testimonials = t.testimonialsList;

  const [email, setEmail] = useState("");
  const [emailSent, setEmailSent] = useState(false);

  function handleEmailSubmit(e) {
    e.preventDefault();
    setEmailSent(true);
    setTimeout(() => setShowExit(false), 1200);
    setTimeout(() => setShowSticky(false), 1200);
  }

  const popupAnim = "fixed inset-0 flex items-center justify-center z-[1000] bg-black/40 transition-all";
  const popupBox = "bg-white rounded-2xl shadow-2xl p-8 max-w-md w-full text-center scale-100 opacity-100 transition-all";

  useEffect(() => {
    AOS.init({ once: true, duration: 800 });
  }, []);

  const emailPlaceholder = t.popupEmailPlaceholder || "Your email";
  const emailPlaceholderShort = t.popupEmailPlaceholderShort || "Email";

  return (
    <div className="min-h-screen bg-white text-black font-roboto relative overflow-x-hidden">
      {/* --- POPUPS --- */}
      {showWelcome && (
        <div className={popupAnim} style={{ animation: "fadeIn .3s" }}>
          <div className={popupBox + " relative"}>
            <button className="absolute top-3 right-4 text-2xl" onClick={() => setShowWelcome(false)}>&times;</button>
            <h2 className="text-2xl font-bold mb-4">{t.popupWelcomeTitle}</h2>
            <p className="mb-6">{t.popupWelcomeDesc}</p>
            <button
              className="bg-[#ffba01] text-white font-semibold px-6 py-3 rounded-full shadow hover:bg-[#ffb000] transition"
              onClick={() => setShowWelcome(false)}
            >
              {t.popupWelcomeBtn}
            </button>
          </div>
        </div>
      )}
      {showExit && (
        <div className={popupAnim} style={{ animation: "fadeIn .3s" }}>
          <div className={popupBox + " relative"}>
            <button className="absolute top-3 right-4 text-2xl" onClick={() => setShowExit(false)}>&times;</button>
            <h2 className="text-xl font-bold mb-3">{t.popupExitTitle}</h2>
            <p className="mb-4">{t.popupExitDesc}</p>
            {emailSent ? (
              <div className="text-green-600 font-semibold py-4">{t.popupExitSent}</div>
            ) : (
              <form onSubmit={handleEmailSubmit} className="flex flex-col items-center gap-3">
                <input
                  type="email"
                  required
                  placeholder={emailPlaceholder}
                  className="border rounded px-4 py-2 w-full"
                  value={email}
                  onChange={e => setEmail(e.target.value)}
                />
                <button
                  type="submit"
                  className="bg-[#ffba01] text-white font-semibold px-6 py-2 rounded-full shadow hover:bg-[#ffb000] transition"
                >
                  {t.popupExitBtn}
                </button>
              </form>
            )}
          </div>
        </div>
      )}
      {showSticky && (
        <div className="fixed bottom-6 left-1/2 -translate-x-1/2 z-[1000]">
          <div className="bg-black text-white px-6 py-4 rounded-full shadow-lg flex items-center gap-4 animate-fadeInUp">
            <span className="font-semibold">{t.popupStickyTitle}</span>
            {emailSent ? (
              <span className="text-green-400 font-semibold">{t.popupStickyThanks}</span>
            ) : (
              <form onSubmit={handleEmailSubmit} className="flex items-center gap-2">
                <input
                  type="email"
                  required
                  placeholder={emailPlaceholderShort}
                  className="rounded px-2 py-1 text-black"
                  value={email}
                  onChange={e => setEmail(e.target.value)}
                />
                <button
                  type="submit"
                  className="bg-[#ffba01] text-black font-semibold px-4 py-1 rounded-full hover:bg-[#ffb000] transition"
                >
                  {t.popupStickyBtn}
                </button>
              </form>
            )}
            <button className="ml-2 text-xl" onClick={() => setShowSticky(false)}>&times;</button>
          </div>
        </div>
      )}
      {showMapModal && mapModalData && (
        <div className={popupAnim} style={{ animation: "fadeIn .3s" }}>
          <div className={popupBox + " relative"}>
            <button className="absolute top-3 right-4 text-2xl" onClick={() => setShowMapModal(false)}>&times;</button>
            <h2 className="text-2xl font-bold mb-2">{mapModalData.name}</h2>
            <p className="mb-4">{mapModalData.desc}</p>
            <button
              className="bg-[#ffba01] text-white font-semibold px-6 py-3 rounded-full shadow hover:bg-[#ffb000] transition"
              onClick={() => setShowMapModal(false)}
            >
              {t.popupMapBtn}
            </button>
          </div>
        </div>
      )}

      <div className="absolute top-4 right-4 z-50">
        <button
          className={`px-3 py-1 rounded-l ${lang === "en" ? "bg-black text-white" : "bg-gray-200 text-black"}`}
          onClick={() => setLang("en")}
        >
          EN
        </button>
        <button
          className={`px-3 py-1 rounded-r ${lang === "ru" ? "bg-black text-white" : "bg-gray-200 text-black"}`}
          onClick={() => setLang("ru")}
        >
          RU
        </button>
      </div>

      <div className="absolute top-0 left-0 w-full h-[700px] z-0">
        <img
          src="/fon-1.jpg"
          alt="Top background"
          className="w-full h-full object-cover opacity-30"
          style={{ backgroundAttachment: "fixed" }}
        />
      </div>
      <div className="absolute top-[700px] left-0 w-full h-[600px] z-0">
        <img
          src="/fon-2.jpg"
          alt="How TRACE looks background"
          className="w-full h-full object-cover opacity-20"
          style={{ backgroundAttachment: "fixed" }}
        />
      </div>
      <div
        className="absolute top-[700px] left-0 w-full h-10 z-10 pointer-events-none"
        style={{
          background:
            "linear-gradient(to bottom, rgba(255,255,255,0.7) 0%, rgba(255,255,255,0) 100%)",
        }}
      />

      <div className="relative z-20">
        <header className="p-6 flex justify-between items-center max-w-7xl mx-auto">
          <div className="text-2xl font-semibold">TRACE</div>
          <button
            className="px-6 py-2 rounded-lg font-semibold text-white transition"
            style={{ backgroundColor: "#ffba01" }}
          >
            {t.getEarlyAccess}
          </button>
        </header>

        {/* Hero section */}
        <section className="px-6 pt-20 pb-0 min-h-[700px] max-w-6xl mx-auto flex flex-col md:flex-row items-center md:items-start gap-10 relative z-10">
          <div className="flex-1 flex flex-col justify-center">
            <h1 className="text-4xl md:text-5xl font-bold leading-tight mb-4" style={{ whiteSpace: "pre-line" }}>
              {t.heroTitle}
            </h1>
            <p className="text-lg md:text-xl mb-6" style={{ whiteSpace: "pre-line" }}>
              {t.heroDesc}
            </p>
            <button
              className="text-lg px-8 py-3 rounded-xl shadow transition font-bold text-white"
              style={{ backgroundColor: "#ffba01" }}
            >
              {t.tryDemo}
            </button>
          </div>
          <div className="flex-1 flex justify-end items-end mt-10 md:mt-0 pr-6">
            <img
              src="/trace-app-mockup.png"
              alt="TRACE App"
              className="w-60 h-auto rounded-2xl shadow-2xl"
              style={{ background: "transparent" }}
            />
          </div>
        </section>

        {/* Problems block */}
        <section className="bg-[#F9FAFB] text-black py-16 px-6 md:px-12">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">
              {t.soundsFamiliar}
            </h2>
            <p className="text-lg md:text-xl mb-10">
              {t.soundsFamiliarDesc}
            </p>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
              {problems.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="bg-white shadow-lg rounded-2xl p-6">
                    <h3 className="text-xl font-semibold mb-2 text-black">{item.title}</h3>
                    <p>{item.desc}</p>
                  </div>
                </ScrollReveal>
              ))}
            </div>
          </div>
        </section>

        {/* What is TRACE */}
        <section className="bg-white text-black py-20 px-6 md:px-12">
          <div className="max-w-6xl mx-auto text-center">
            <h2 className="text-3xl md:text-4xl font-bold mb-6">{t.whatIsTrace}</h2>
            <p className="text-lg md:text-xl mb-12">
              {t.whatIsTraceDesc}
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-left">
              {whatIsTrace.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="bg-white rounded-2xl p-6 shadow-md">
                    <h3 className="text-xl font-semibold mb-2 text-black">{item.title}</h3>
                    <p>{item.desc}</p>
                  </div>
                </ScrollReveal>
              ))}
            </div>
            <div className="mt-16">
              <a href="#download" className="inline-block bg-[#ffba01] hover:bg-[#ffb000] text-white font-semibold py-3 px-8 rounded-full shadow transition">
                {t.tryTrace}
              </a>
            </div>
          </div>
        </section>

        {/* How does it work */}
        <section className="bg-[#F0F4F8] text-black py-20 px-6 md:px-12">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center mb-6">{t.howWorks}</h2>
            <p className="text-lg md:text-xl text-center mb-12">
              {t.howWorksDesc}
            </p>
            <div className="grid md:grid-cols-4 gap-8">
              {howWorks.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="bg-white p-6 rounded-2xl shadow-md flex flex-col items-center text-center">
                    <div className="text-4xl mb-4">{item.icon}</div>
                    <h3 className="text-xl font-semibold mb-2">{item.title}</h3>
                    <p>{item.desc}</p>
                  </div>
                </ScrollReveal>
              ))}
            </div>
            <div className="text-center mt-16">
              <a
                href="#download"
                className="inline-block bg-[#ffba01] hover:bg-[#ffb000] text-white font-semibold py-3 px-8 rounded-full shadow transition"
              >
                {t.tryTraceFree}
              </a>
            </div>
          </div>
        </section>

        {/* Use Cases */}
        <section className="bg-white text-black py-20 px-6 md:px-12">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center mb-6">{t.useCases}</h2>
            <p className="text-lg md:text-xl text-center mb-12">
              {t.useCasesDesc}
            </p>
            <div className="grid md:grid-cols-3 gap-8">
              {useCases.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="bg-[#F9FAFB] p-6 rounded-2xl shadow-sm hover:shadow-md">
                    <h3 className="text-xl font-semibold mb-2">{item.title}</h3>
                    <p className="mb-4">{item.desc}</p>
                    <a href="#download" className="inline-block text-sm font-semibold text-white bg-[#ffba01] px-5 py-2 rounded-full hover:opacity-90 transition">
                      {item.btn}
                    </a>
                  </div>
                </ScrollReveal>
              ))}
            </div>
          </div>
        </section>

        {/* Why TRACE */}
        <section className="bg-gray-50 text-black py-20 px-6 md:px-12">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center mb-6">{t.whyTrace}</h2>
            <p className="text-lg md:text-xl text-center mb-12">
              {t.whyTraceDesc}
            </p>
            <div className="grid md:grid-cols-2 gap-10">
              {features.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="flex items-start space-x-4">
                    <div className="text-[#ffba01] text-3xl">{item.icon}</div>
                    <div>
                      <h3 className="text-xl font-semibold mb-1">{item.title}</h3>
                      <p>{item.desc}</p>
                    </div>
                  </div>
                </ScrollReveal>
              ))}
            </div>
          </div>
        </section>

        {/* Testimonials */}
        <section className="bg-white text-black py-20 px-6 md:px-12">
          <div className="max-w-6xl mx-auto">
            <h2 className="text-3xl md:text-4xl font-bold text-center mb-12">{t.testimonials}</h2>
            <div className="grid md:grid-cols-3 gap-8">
              {testimonials.map((item, idx) => (
                <ScrollReveal key={idx} offset={100 + idx * 40} delay={idx * 0.12}>
                  <div className="bg-gray-50 rounded-2xl p-6 shadow-md">
                    <p className="text-gray-700 text-lg italic mb-4">
                      ‚Äú{item.text}‚Äù
                    </p>
                    <div className="flex items-center space-x-4">
                      <img src={item.img} alt="profile" className="w-12 h-12 rounded-full object-cover" />
                      <div>
                        <p className="font-semibold">{item.name}</p>
                        <p className="text-sm text-gray-500">{item.route}</p>
                      </div>
                    </div>
                  </div>
                </ScrollReveal>
              ))}
            </div>
          </div>
        </section>

        {/* Final CTA */}
        <section className="bg-[#ffba01] text-black py-20 px-6 md:px-12 text-center">
          <div className="max-w-3xl mx-auto">
            <h2 className="text-4xl md:text-5xl font-bold mb-6 leading-tight">
              {t.ready}
            </h2>
            <p className="text-lg md:text-xl mb-10">
              {t.readyDesc}
            </p>
            <a
              href="#"
              className="inline-block bg-black text-white text-lg font-semibold py-4 px-8 rounded-full shadow-lg hover:bg-gray-800 transition duration-300"
            >
              {t.getEarly}
            </a>
          </div>
        </section>

        <footer className="px-6 py-12 bg-gray-100 text-center text-sm text-gray-500">
          TRACE ¬© {new Date().getFullYear()} | {t.copyright}
        </footer>
      </div>
    </div>
  );
}

/* –î–æ–±–∞–≤—å—Ç–µ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –∏–ª–∏ tailwind.config.js:
@keyframes fadeIn {
  from { opacity: 0; transform: scale(0.97);}
  to { opacity: 1; transform: scale(1);}
}
@keyframes fadeInUp {
  from { opacity: 0; transform: translateY(40px);}
  to { opacity: 1; transform: translateY(0);}
}
.animate-fadeInUp { animation: fadeInUp 0.4s;}
*/
